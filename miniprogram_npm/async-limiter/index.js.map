{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\r\n\r\nfunction Queue(options) {\r\n  if (!(this instanceof Queue)) {\r\n    return new Queue(options);\r\n  }\r\n\r\n  options = options || {};\r\n  this.concurrency = options.concurrency || Infinity;\r\n  this.pending = 0;\r\n  this.jobs = [];\r\n  this.cbs = [];\r\n  this._done = done.bind(this);\r\n}\r\n\r\nvar arrayAddMethods = [\r\n  'push',\r\n  'unshift',\r\n  'splice'\r\n];\r\n\r\narrayAddMethods.forEach(function(method) {\r\n  Queue.prototype[method] = function() {\r\n    var methodResult = Array.prototype[method].apply(this.jobs, arguments);\r\n    this._run();\r\n    return methodResult;\r\n  };\r\n});\r\n\r\nObject.defineProperty(Queue.prototype, 'length', {\r\n  get: function() {\r\n    return this.pending + this.jobs.length;\r\n  }\r\n});\r\n\r\nQueue.prototype._run = function() {\r\n  if (this.pending === this.concurrency) {\r\n    return;\r\n  }\r\n  if (this.jobs.length) {\r\n    var job = this.jobs.shift();\r\n    this.pending++;\r\n    job(this._done);\r\n    this._run();\r\n  }\r\n\r\n  if (this.pending === 0) {\r\n    while (this.cbs.length !== 0) {\r\n      var cb = this.cbs.pop();\r\n      process.nextTick(cb);\r\n    }\r\n  }\r\n};\r\n\r\nQueue.prototype.onDone = function(cb) {\r\n  if (typeof cb === 'function') {\r\n    this.cbs.push(cb);\r\n    this._run();\r\n  }\r\n};\r\n\r\nfunction done() {\r\n  this.pending--;\r\n  this._run();\r\n}\r\n\r\nmodule.exports = Queue;\r\n"]}