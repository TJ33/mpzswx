{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["module.exports = after\r\n\r\nfunction after(count, callback, err_cb) {\r\n    var bail = false\r\n    err_cb = err_cb || noop\r\n    proxy.count = count\r\n\r\n    return (count === 0) ? callback() : proxy\r\n\r\n    function proxy(err, result) {\r\n        if (proxy.count <= 0) {\r\n            throw new Error('after called too many times')\r\n        }\r\n        --proxy.count\r\n\r\n        // after first error, rest are passed to err_cb\r\n        if (err) {\r\n            bail = true\r\n            callback(err)\r\n            // future error callbacks will go to error handler\r\n            callback = err_cb\r\n        } else if (proxy.count === 0 && !bail) {\r\n            callback(null, result)\r\n        }\r\n    }\r\n}\r\n\r\nfunction noop() {}\r\n"]}